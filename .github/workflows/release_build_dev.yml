name: Nightly develop Binaries (dev)

on:
  schedule:
    - cron:  '20 3 * * *'

  workflow_dispatch:

jobs:
  create-release:
    # if: github.repository == 'NAmorim/Superalgos'
    runs-on: ubuntu-latest
    steps:
      - name: Download a file
        run: curl "https://raw.githubusercontent.com/${{ github.repository }}/develop/package.json" -o package.json

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Get version
        id: vars
        run: echo "tag=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Create nightly release
        id: create_release
        uses: viperproject/create-nightly-release@v1.1.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}-${{ env.date }}
          release_name: Superalgos-Beta-v${{ env.tag }} Snapshot ${{ env.date }}
          keep_num: 5
          keep_tags: false

  build-release:
    #if: github.repository == 'superalgos/superalgos'
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
        matrix:
          os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      #- name: Get current date
      #  id: date
      #  run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Check out Git repository
        uses: actions/checkout@master
        with:
          ref: develop
      
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Get version
        id: vars
        run: echo "tag=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@master
        with:
          node-version: 16

      - run: npm clean-install

      - name: Run npm run release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist -- -c.extraMetadata.version=${{ $GITHUB_ENV.tag }}-${{ $GITHUB_ENV.date }} -p onTagOrDraft

